type Query {
  transactions(
    filter: String
    skip: Int
    first: Int
    begin: String
    end: String
  ): [Transaction!]!
}

type Mutation {
  post(title: String!, amount: Float!, date: String!): Transaction!
  deleteTransaction(id: ID!): Transaction
  updateTransaction(id: ID!, data: TransactionUpdateInput): Transaction!
  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
}

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  name: String!
  email: String!
  transactions: [Transaction!]!
}

type Transaction {
  id: ID!
  date: String!
  title: String!
  amount: Float!
  proceeded: Boolean
  createdBy: User
}

input TransactionUpdateInput {
  date: String
  title: String
  amount: Float
}
